// <auto-generated />
using System;
using Abogado.Infrastructure.Persistences.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Abogado.Infrastructure.Migrations
{
    [DbContext(typeof(AbogadoDbContext))]
    partial class AbogadoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ABOGADO")
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Abogado.Domain.Entities.Case", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("CaseId")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("CaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DivorceForm")
                        .HasColumnType("int");

                    b.Property<int>("DivorceMechanism")
                        .HasColumnType("int");

                    b.Property<string>("FileId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Trial")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("FileId");

                    b.ToTable("Cases", "ABOGADO");
                });

            modelBuilder.Entity("Abogado.Domain.Entities.FileDocument", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Files", "ABOGADO");
                });

            modelBuilder.Entity("Abogado.Domain.Entities.Meeting", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Meetings", "ABOGADO");
                });

            modelBuilder.Entity("Abogado.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EncriptPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users", "ABOGADO");
                });

            modelBuilder.Entity("CaseUser", b =>
                {
                    b.Property<string>("CasesId")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("UsersId")
                        .HasColumnType("varchar(36)");

                    b.HasKey("CasesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("CaseUser", "ABOGADO");
                });

            modelBuilder.Entity("MeetingUser", b =>
                {
                    b.Property<string>("MeetingsId")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("UsersId")
                        .HasColumnType("varchar(36)");

                    b.HasKey("MeetingsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("MeetingUser", "ABOGADO");
                });

            modelBuilder.Entity("Abogado.Domain.Entities.Case", b =>
                {
                    b.HasOne("Abogado.Domain.Entities.Case", null)
                        .WithMany("CaseHistory")
                        .HasForeignKey("CaseId");

                    b.HasOne("Abogado.Domain.Entities.FileDocument", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });

            modelBuilder.Entity("CaseUser", b =>
                {
                    b.HasOne("Abogado.Domain.Entities.Case", null)
                        .WithMany()
                        .HasForeignKey("CasesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Abogado.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MeetingUser", b =>
                {
                    b.HasOne("Abogado.Domain.Entities.Meeting", null)
                        .WithMany()
                        .HasForeignKey("MeetingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Abogado.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abogado.Domain.Entities.Case", b =>
                {
                    b.Navigation("CaseHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
